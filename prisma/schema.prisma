generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model attributes {
  id                      BigInt                 @id @default(autoincrement())
  created_at              DateTime?              @default(now()) @db.Timestamptz(6)
  name                    String                 @unique @db.VarChar
  is_percentage           Boolean
  character_default_value Float                  @db.Real
  character_attributes    character_attributes[]
  entity_attributes       entity_attributes[]
  item_attributes         item_attributes[]
}

model character_attributes {
  id           BigInt      @id @default(autoincrement())
  created_at   DateTime?   @default(now()) @db.Timestamptz(6)
  character_id BigInt?
  attribute_id BigInt?
  value        Float       @db.Real
  attributes   attributes? @relation(fields: [attribute_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  characters   characters? @relation(fields: [character_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model character_items {
  id           BigInt      @id @default(autoincrement())
  created_at   DateTime?   @default(now()) @db.Timestamptz(6)
  character_Id BigInt?
  item_id      BigInt?
  amount       Int?
  characters   characters? @relation(fields: [character_Id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  items        items?      @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model characters {
  id                   BigInt                 @id @default(autoincrement())
  created_at           DateTime?              @default(now()) @db.Timestamptz(6)
  discord_id           String                 @unique @db.VarChar
  level                Int
  exp                  BigInt
  money                BigInt
  location_id          BigInt?
  locations            locations?             @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  character_attributes character_attributes[]
  character_items      character_items[]
}

model entities {
  id                BigInt              @id @default(autoincrement())
  created_at        DateTime?           @default(now()) @db.Timestamptz(6)
  name              String?             @db.VarChar
  description       String?
  entity_type_id    BigInt?
  entity_types      entity_types?       @relation(fields: [entity_type_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  entity_attributes entity_attributes[]
  entity_locations  entity_locations[]
}

model entity_attributes {
  id           BigInt      @id @default(autoincrement())
  created_at   DateTime?   @default(now()) @db.Timestamptz(6)
  entity_id    BigInt?
  attribute_id BigInt?
  value        Float       @db.Real
  attributes   attributes? @relation(fields: [attribute_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  entities     entities?   @relation(fields: [entity_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model entity_locations {
  id          BigInt     @id @default(autoincrement())
  created_at  DateTime?  @default(now()) @db.Timestamptz(6)
  entity_id   BigInt?
  location_id BigInt?
  entities    entities?  @relation(fields: [entity_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  locations   locations? @relation(fields: [location_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model entity_types {
  id         BigInt     @id @default(autoincrement())
  created_at DateTime?  @default(now()) @db.Timestamptz(6)
  name       String     @db.VarChar
  entities   entities[]
}

model item_qualities {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?   @db.VarChar
}

model item_types {
  id         BigInt    @id @default(autoincrement())
  created_at DateTime? @default(now()) @db.Timestamptz(6)
  name       String?   @db.VarChar
}

model items {
  id              BigInt            @id @default(autoincrement())
  created_at      DateTime?         @default(now()) @db.Timestamptz(6)
  name            String?           @db.VarChar
  description     String?           @db.VarChar
  character_items character_items[]
  item_attributes item_attributes[]
}

model locations {
  id               BigInt             @id @default(autoincrement())
  created_at       DateTime?          @default(now()) @db.Timestamptz(6)
  name             String             @unique @db.VarChar
  description      String?
  level            Int
  characters       characters[]
  entity_locations entity_locations[]
}

model item_attributes {
  id           BigInt      @id @default(autoincrement())
  created_at   DateTime?   @default(now()) @db.Timestamptz(6)
  attribute_id BigInt?
  item_id      BigInt?
  value        Float       @default(0) @db.Real
  attributes   attributes? @relation(fields: [attribute_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  items        items?      @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

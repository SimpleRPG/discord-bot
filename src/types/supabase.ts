/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/character_attributes": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.character_attributes.id"];
          created_at?: parameters["rowFilter.character_attributes.created_at"];
          character_id?: parameters["rowFilter.character_attributes.character_id"];
          attribute_id?: parameters["rowFilter.character_attributes.attribute_id"];
          value?: parameters["rowFilter.character_attributes.value"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["character_attributes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** character_attributes */
          character_attributes?: definitions["character_attributes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.character_attributes.id"];
          created_at?: parameters["rowFilter.character_attributes.created_at"];
          character_id?: parameters["rowFilter.character_attributes.character_id"];
          attribute_id?: parameters["rowFilter.character_attributes.attribute_id"];
          value?: parameters["rowFilter.character_attributes.value"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.character_attributes.id"];
          created_at?: parameters["rowFilter.character_attributes.created_at"];
          character_id?: parameters["rowFilter.character_attributes.character_id"];
          attribute_id?: parameters["rowFilter.character_attributes.attribute_id"];
          value?: parameters["rowFilter.character_attributes.value"];
        };
        body: {
          /** character_attributes */
          character_attributes?: definitions["character_attributes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/entity_locations": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.entity_locations.id"];
          created_at?: parameters["rowFilter.entity_locations.created_at"];
          entity_id?: parameters["rowFilter.entity_locations.entity_id"];
          location_id?: parameters["rowFilter.entity_locations.location_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["entity_locations"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** entity_locations */
          entity_locations?: definitions["entity_locations"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.entity_locations.id"];
          created_at?: parameters["rowFilter.entity_locations.created_at"];
          entity_id?: parameters["rowFilter.entity_locations.entity_id"];
          location_id?: parameters["rowFilter.entity_locations.location_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.entity_locations.id"];
          created_at?: parameters["rowFilter.entity_locations.created_at"];
          entity_id?: parameters["rowFilter.entity_locations.entity_id"];
          location_id?: parameters["rowFilter.entity_locations.location_id"];
        };
        body: {
          /** entity_locations */
          entity_locations?: definitions["entity_locations"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/item_types": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.item_types.id"];
          created_at?: parameters["rowFilter.item_types.created_at"];
          name?: parameters["rowFilter.item_types.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["item_types"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** item_types */
          item_types?: definitions["item_types"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.item_types.id"];
          created_at?: parameters["rowFilter.item_types.created_at"];
          name?: parameters["rowFilter.item_types.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.item_types.id"];
          created_at?: parameters["rowFilter.item_types.created_at"];
          name?: parameters["rowFilter.item_types.name"];
        };
        body: {
          /** item_types */
          item_types?: definitions["item_types"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/character_items": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.character_items.id"];
          created_at?: parameters["rowFilter.character_items.created_at"];
          character_Id?: parameters["rowFilter.character_items.character_Id"];
          item_id?: parameters["rowFilter.character_items.item_id"];
          amount?: parameters["rowFilter.character_items.amount"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["character_items"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** character_items */
          character_items?: definitions["character_items"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.character_items.id"];
          created_at?: parameters["rowFilter.character_items.created_at"];
          character_Id?: parameters["rowFilter.character_items.character_Id"];
          item_id?: parameters["rowFilter.character_items.item_id"];
          amount?: parameters["rowFilter.character_items.amount"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.character_items.id"];
          created_at?: parameters["rowFilter.character_items.created_at"];
          character_Id?: parameters["rowFilter.character_items.character_Id"];
          item_id?: parameters["rowFilter.character_items.item_id"];
          amount?: parameters["rowFilter.character_items.amount"];
        };
        body: {
          /** character_items */
          character_items?: definitions["character_items"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/entities": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.entities.id"];
          created_at?: parameters["rowFilter.entities.created_at"];
          name?: parameters["rowFilter.entities.name"];
          description?: parameters["rowFilter.entities.description"];
          entity_type_id?: parameters["rowFilter.entities.entity_type_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["entities"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** entities */
          entities?: definitions["entities"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.entities.id"];
          created_at?: parameters["rowFilter.entities.created_at"];
          name?: parameters["rowFilter.entities.name"];
          description?: parameters["rowFilter.entities.description"];
          entity_type_id?: parameters["rowFilter.entities.entity_type_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.entities.id"];
          created_at?: parameters["rowFilter.entities.created_at"];
          name?: parameters["rowFilter.entities.name"];
          description?: parameters["rowFilter.entities.description"];
          entity_type_id?: parameters["rowFilter.entities.entity_type_id"];
        };
        body: {
          /** entities */
          entities?: definitions["entities"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/characters": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.characters.id"];
          created_at?: parameters["rowFilter.characters.created_at"];
          discord_id?: parameters["rowFilter.characters.discord_id"];
          level?: parameters["rowFilter.characters.level"];
          exp?: parameters["rowFilter.characters.exp"];
          money?: parameters["rowFilter.characters.money"];
          location_id?: parameters["rowFilter.characters.location_id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["characters"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** characters */
          characters?: definitions["characters"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.characters.id"];
          created_at?: parameters["rowFilter.characters.created_at"];
          discord_id?: parameters["rowFilter.characters.discord_id"];
          level?: parameters["rowFilter.characters.level"];
          exp?: parameters["rowFilter.characters.exp"];
          money?: parameters["rowFilter.characters.money"];
          location_id?: parameters["rowFilter.characters.location_id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.characters.id"];
          created_at?: parameters["rowFilter.characters.created_at"];
          discord_id?: parameters["rowFilter.characters.discord_id"];
          level?: parameters["rowFilter.characters.level"];
          exp?: parameters["rowFilter.characters.exp"];
          money?: parameters["rowFilter.characters.money"];
          location_id?: parameters["rowFilter.characters.location_id"];
        };
        body: {
          /** characters */
          characters?: definitions["characters"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/entity_types": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.entity_types.id"];
          created_at?: parameters["rowFilter.entity_types.created_at"];
          name?: parameters["rowFilter.entity_types.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["entity_types"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** entity_types */
          entity_types?: definitions["entity_types"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.entity_types.id"];
          created_at?: parameters["rowFilter.entity_types.created_at"];
          name?: parameters["rowFilter.entity_types.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.entity_types.id"];
          created_at?: parameters["rowFilter.entity_types.created_at"];
          name?: parameters["rowFilter.entity_types.name"];
        };
        body: {
          /** entity_types */
          entity_types?: definitions["entity_types"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/items": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items.id"];
          created_at?: parameters["rowFilter.items.created_at"];
          name?: parameters["rowFilter.items.name"];
          description?: parameters["rowFilter.items.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["items"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** items */
          items?: definitions["items"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items.id"];
          created_at?: parameters["rowFilter.items.created_at"];
          name?: parameters["rowFilter.items.name"];
          description?: parameters["rowFilter.items.description"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.items.id"];
          created_at?: parameters["rowFilter.items.created_at"];
          name?: parameters["rowFilter.items.name"];
          description?: parameters["rowFilter.items.description"];
        };
        body: {
          /** items */
          items?: definitions["items"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/locations": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.locations.id"];
          created_at?: parameters["rowFilter.locations.created_at"];
          name?: parameters["rowFilter.locations.name"];
          description?: parameters["rowFilter.locations.description"];
          level?: parameters["rowFilter.locations.level"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["locations"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** locations */
          locations?: definitions["locations"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.locations.id"];
          created_at?: parameters["rowFilter.locations.created_at"];
          name?: parameters["rowFilter.locations.name"];
          description?: parameters["rowFilter.locations.description"];
          level?: parameters["rowFilter.locations.level"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.locations.id"];
          created_at?: parameters["rowFilter.locations.created_at"];
          name?: parameters["rowFilter.locations.name"];
          description?: parameters["rowFilter.locations.description"];
          level?: parameters["rowFilter.locations.level"];
        };
        body: {
          /** locations */
          locations?: definitions["locations"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/attributes": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.attributes.id"];
          created_at?: parameters["rowFilter.attributes.created_at"];
          name?: parameters["rowFilter.attributes.name"];
          is_percentage?: parameters["rowFilter.attributes.is_percentage"];
          character_default_value?: parameters["rowFilter.attributes.character_default_value"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["attributes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** attributes */
          attributes?: definitions["attributes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.attributes.id"];
          created_at?: parameters["rowFilter.attributes.created_at"];
          name?: parameters["rowFilter.attributes.name"];
          is_percentage?: parameters["rowFilter.attributes.is_percentage"];
          character_default_value?: parameters["rowFilter.attributes.character_default_value"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.attributes.id"];
          created_at?: parameters["rowFilter.attributes.created_at"];
          name?: parameters["rowFilter.attributes.name"];
          is_percentage?: parameters["rowFilter.attributes.is_percentage"];
          character_default_value?: parameters["rowFilter.attributes.character_default_value"];
        };
        body: {
          /** attributes */
          attributes?: definitions["attributes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/entity_attributes": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.entity_attributes.id"];
          created_at?: parameters["rowFilter.entity_attributes.created_at"];
          entity_id?: parameters["rowFilter.entity_attributes.entity_id"];
          attribute_id?: parameters["rowFilter.entity_attributes.attribute_id"];
          value?: parameters["rowFilter.entity_attributes.value"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["entity_attributes"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** entity_attributes */
          entity_attributes?: definitions["entity_attributes"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.entity_attributes.id"];
          created_at?: parameters["rowFilter.entity_attributes.created_at"];
          entity_id?: parameters["rowFilter.entity_attributes.entity_id"];
          attribute_id?: parameters["rowFilter.entity_attributes.attribute_id"];
          value?: parameters["rowFilter.entity_attributes.value"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.entity_attributes.id"];
          created_at?: parameters["rowFilter.entity_attributes.created_at"];
          entity_id?: parameters["rowFilter.entity_attributes.entity_id"];
          attribute_id?: parameters["rowFilter.entity_attributes.attribute_id"];
          value?: parameters["rowFilter.entity_attributes.value"];
        };
        body: {
          /** entity_attributes */
          entity_attributes?: definitions["entity_attributes"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/item_qualities": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.item_qualities.id"];
          created_at?: parameters["rowFilter.item_qualities.created_at"];
          name?: parameters["rowFilter.item_qualities.name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["item_qualities"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** item_qualities */
          item_qualities?: definitions["item_qualities"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.item_qualities.id"];
          created_at?: parameters["rowFilter.item_qualities.created_at"];
          name?: parameters["rowFilter.item_qualities.name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.item_qualities.id"];
          created_at?: parameters["rowFilter.item_qualities.created_at"];
          name?: parameters["rowFilter.item_qualities.name"];
        };
        body: {
          /** item_qualities */
          item_qualities?: definitions["item_qualities"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  character_attributes: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `characters.id`.<fk table='characters' column='id'/>
     */
    character_id?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `attributes.id`.<fk table='attributes' column='id'/>
     */
    attribute_id?: number;
    /** Format: real */
    value: number;
  };
  entity_locations: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `entities.id`.<fk table='entities' column='id'/>
     */
    entity_id?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `locations.id`.<fk table='locations' column='id'/>
     */
    location_id?: number;
  };
  item_types: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
  };
  character_items: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `characters.id`.<fk table='characters' column='id'/>
     */
    character_Id?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `items.id`.<fk table='items' column='id'/>
     */
    item_id?: number;
    /** Format: integer */
    amount?: number;
  };
  entities: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
    /** Format: text */
    description?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `entity_types.id`.<fk table='entity_types' column='id'/>
     */
    entity_type_id?: number;
  };
  characters: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    discord_id: string;
    /** Format: integer */
    level: number;
    /** Format: bigint */
    exp: number;
    /** Format: bigint */
    money: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `locations.id`.<fk table='locations' column='id'/>
     */
    location_id?: number;
  };
  entity_types: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name: string;
  };
  items: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
    /** Format: text */
    description?: string;
  };
  locations: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name: string;
    /** Format: text */
    description?: string;
    /** Format: integer */
    level: number;
  };
  attributes: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name: string;
    /** Format: boolean */
    is_percentage: boolean;
    /** Format: real */
    character_default_value: number;
  };
  entity_attributes: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `entities.id`.<fk table='entities' column='id'/>
     */
    entity_id?: number;
    /**
     * Format: bigint
     * @description Note:
     * This is a Foreign Key to `attributes.id`.<fk table='attributes' column='id'/>
     */
    attribute_id?: number;
    /** Format: real */
    value?: number;
  };
  item_qualities: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at?: string;
    /** Format: character varying */
    name?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description character_attributes */
  "body.character_attributes": definitions["character_attributes"];
  /** Format: bigint */
  "rowFilter.character_attributes.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.character_attributes.created_at": string;
  /** Format: bigint */
  "rowFilter.character_attributes.character_id": string;
  /** Format: bigint */
  "rowFilter.character_attributes.attribute_id": string;
  /** Format: real */
  "rowFilter.character_attributes.value": string;
  /** @description entity_locations */
  "body.entity_locations": definitions["entity_locations"];
  /** Format: bigint */
  "rowFilter.entity_locations.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.entity_locations.created_at": string;
  /** Format: bigint */
  "rowFilter.entity_locations.entity_id": string;
  /** Format: bigint */
  "rowFilter.entity_locations.location_id": string;
  /** @description item_types */
  "body.item_types": definitions["item_types"];
  /** Format: bigint */
  "rowFilter.item_types.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.item_types.created_at": string;
  /** Format: character varying */
  "rowFilter.item_types.name": string;
  /** @description character_items */
  "body.character_items": definitions["character_items"];
  /** Format: bigint */
  "rowFilter.character_items.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.character_items.created_at": string;
  /** Format: bigint */
  "rowFilter.character_items.character_Id": string;
  /** Format: bigint */
  "rowFilter.character_items.item_id": string;
  /** Format: integer */
  "rowFilter.character_items.amount": string;
  /** @description entities */
  "body.entities": definitions["entities"];
  /** Format: bigint */
  "rowFilter.entities.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.entities.created_at": string;
  /** Format: character varying */
  "rowFilter.entities.name": string;
  /** Format: text */
  "rowFilter.entities.description": string;
  /** Format: bigint */
  "rowFilter.entities.entity_type_id": string;
  /** @description characters */
  "body.characters": definitions["characters"];
  /** Format: bigint */
  "rowFilter.characters.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.characters.created_at": string;
  /** Format: character varying */
  "rowFilter.characters.discord_id": string;
  /** Format: integer */
  "rowFilter.characters.level": string;
  /** Format: bigint */
  "rowFilter.characters.exp": string;
  /** Format: bigint */
  "rowFilter.characters.money": string;
  /** Format: bigint */
  "rowFilter.characters.location_id": string;
  /** @description entity_types */
  "body.entity_types": definitions["entity_types"];
  /** Format: bigint */
  "rowFilter.entity_types.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.entity_types.created_at": string;
  /** Format: character varying */
  "rowFilter.entity_types.name": string;
  /** @description items */
  "body.items": definitions["items"];
  /** Format: bigint */
  "rowFilter.items.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.items.created_at": string;
  /** Format: character varying */
  "rowFilter.items.name": string;
  /** Format: text */
  "rowFilter.items.description": string;
  /** @description locations */
  "body.locations": definitions["locations"];
  /** Format: bigint */
  "rowFilter.locations.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.locations.created_at": string;
  /** Format: character varying */
  "rowFilter.locations.name": string;
  /** Format: text */
  "rowFilter.locations.description": string;
  /** Format: integer */
  "rowFilter.locations.level": string;
  /** @description attributes */
  "body.attributes": definitions["attributes"];
  /** Format: bigint */
  "rowFilter.attributes.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.attributes.created_at": string;
  /** Format: character varying */
  "rowFilter.attributes.name": string;
  /** Format: boolean */
  "rowFilter.attributes.is_percentage": string;
  /** Format: real */
  "rowFilter.attributes.character_default_value": string;
  /** @description entity_attributes */
  "body.entity_attributes": definitions["entity_attributes"];
  /** Format: bigint */
  "rowFilter.entity_attributes.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.entity_attributes.created_at": string;
  /** Format: bigint */
  "rowFilter.entity_attributes.entity_id": string;
  /** Format: bigint */
  "rowFilter.entity_attributes.attribute_id": string;
  /** Format: real */
  "rowFilter.entity_attributes.value": string;
  /** @description item_qualities */
  "body.item_qualities": definitions["item_qualities"];
  /** Format: bigint */
  "rowFilter.item_qualities.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.item_qualities.created_at": string;
  /** Format: character varying */
  "rowFilter.item_qualities.name": string;
}

export interface operations {}

export interface external {}
